#0-add_integer.txt

=====================================================
This tests references the 0-add_integer.py file
=====================================================

This library has only one function call which it runs the test from
``add_integer()``.

Test cases
===========

``add_integer()`` returns the summation of its arguments. That value
is equivalent to using the ``+`` operator.

::
	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(1, 2)
	3

	>>> add_integer(100, -2)
	98

	>>> add_integer(2)
	100

	>>> add_integer(100.3, -2)
	98

	>>> add_integer(4, "School")
	Traceback (most recent call last):
		  ...
	TypeError: b must be an integer

	>>> add_integer(None)
	Traceback (most recent call last):
	         ...
	TypeError: a must be an integer

	>>> add_integer(5, -2)
	3

	>>> add_integer(-7.3, -2.2)
	-9

	>>> add_integer(10)
	108

	>>> add_integer(-20)
	78

	>>> add_integer("ALX", 3)
	Traceback (most recent call last):
		  ...
	TypeError: a must be an integer

	>>> add_integer((1, 3), 3)
	Traceback (most recent call last):
		  ...
	TypeError: a must be an integer

        >>> add_integer(4, (2, 5))
        Traceback (most recent call last):
		  ...
	TypeError: b must be an integer
